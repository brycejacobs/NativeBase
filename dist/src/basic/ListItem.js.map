{"version":3,"sources":["../../../src/basic/ListItem.js"],"names":["ListItem","variables","context","theme","OS","androidRipple","props","onPress","onLongPress","Version","_root","c","listBtnUnderlayColor","children","androidRippleColor","Ripple","androidRippleColorDark","marginLeft","paddingLeft","contextTypes","object","propTypes","style","itemDivider","bool","button","StyledListItem"],"mappings":"21BAAA,qC;AACA,4B;AACA;;AAEA;AACA,mE;AACA,qD;;AAEMA,Q;;;;AAII;AACR,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CAAqB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAtE,mBAAlB;;AAEA;AACC,sBAASG,EAAT,GAAgB,KAAhB;AACA,mBAASC,aAAT,GAA2B,KAD3B;AAEC,CAAC,KAAKC,KAAL,CAAWC,OAAZ,EAAuB,CAAC,KAAKD,KAAL,CAAWE,WAFpC;AAGA,sBAASC,OAAT,EAAoB,EAJrB;AAKE;AACD;AACC;AACC,QAAS,KAAKH,KAAL,CAAWC,OADrB;AAEC,YAAa,KAAKD,KAAL,CAAWE,WAFzB;AAGC,IAAK,sBAAM,QAAKE,KAAL,CAAaC,CAAnB,EAHN;AAIC,cAAeV,UAAUW,oBAJ1B;;AAMC,4DAAU,KAAKN,KAAf,mDAAuB,KAAKA,KAAL,CAAWO,QAAlC,CAND,CADD;;;AAUA,CAhBD,IAgBO;AACN;AACC;AACC,IAAK,sBAAM,QAAKH,KAAL,CAAaC,CAAnB,EADN;AAEC,QAAS,KAAKL,KAAL,CAAWC,OAFrB;AAGC,YAAa,KAAKD,KAAL,CAAWE,WAHzB;AAIC;AACC,KAAKF,KAAL,CAAWQ,kBAAX;AACG,qCAAwBC,MAAxB,CAA+B,KAAKT,KAAL,CAAWQ,kBAA1C,CADH;AAEG,qCAAwBC,MAAxB,CAA+B,mBAASC,sBAAxC,CAPL;;;AAUC,iDAAM,MAAO,CAAEC,WAAY,CAAC,EAAf,CAAmBC,YAAa,EAAhC,CAAb;AACC,4DAAU,KAAKZ,KAAf,mDAAuB,KAAKA,KAAL,CAAWO,QAAlC,CADD,CAVD,CADD;;;;AAgBA;AACD,C,wCAzCIb,Q,CACEmB,Y,CAAe,CACrBhB,MAAO,oBAAUiB,MADI,C;;;AA2CvBpB,SAASqB,SAAT;AACI,gCAAmBA,SADvB;AAECC,MAAO,oBAAUF,MAFlB;AAGCG,YAAa,oBAAUC,IAHxB;AAICC,OAAQ,oBAAUD,IAJnB;;;AAOA,GAAME,gBAAiB,yCAAa,qBAAb,CAAoC,EAApC,iCAA8D1B,QAA9D,CAAvB,C;;AAE2BA,Q,CAAlB0B,c","file":"ListItem.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { TouchableHighlight, Platform, TouchableNativeFeedback, View } from 'react-native';\n\nimport { connectStyle } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../Utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\n\nclass ListItem extends Component {\n\tstatic contextTypes = {\n\t\ttheme: PropTypes.object,\n\t};\n\trender() {\n\t\tconst variables = this.context.theme ? this.context.theme['@@shoutem.theme/themeStyle'].variables : variable;\n\n\t\tif (\n\t\t\tPlatform.OS === 'ios' ||\n\t\t\tvariable.androidRipple === false ||\n\t\t\t(!this.props.onPress && !this.props.onLongPress) ||\n\t\t\tPlatform.Version <= 21\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<TouchableHighlight\n\t\t\t\t\tonPress={this.props.onPress}\n\t\t\t\t\tonLongPress={this.props.onLongPress}\n\t\t\t\t\tref={c => (this._root = c)}\n\t\t\t\t\tunderlayColor={variables.listBtnUnderlayColor}\n\t\t\t\t>\n\t\t\t\t\t<View {...this.props}>{this.props.children}</View>\n\t\t\t\t</TouchableHighlight>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<TouchableNativeFeedback\n\t\t\t\t\tref={c => (this._root = c)}\n\t\t\t\t\tonPress={this.props.onPress}\n\t\t\t\t\tonLongPress={this.props.onLongPress}\n\t\t\t\t\tbackground={\n\t\t\t\t\t\tthis.props.androidRippleColor\n\t\t\t\t\t\t\t? TouchableNativeFeedback.Ripple(this.props.androidRippleColor)\n\t\t\t\t\t\t\t: TouchableNativeFeedback.Ripple(variable.androidRippleColorDark)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<View style={{ marginLeft: -17, paddingLeft: 17 }}>\n\t\t\t\t\t\t<View {...this.props}>{this.props.children}</View>\n\t\t\t\t\t</View>\n\t\t\t\t</TouchableNativeFeedback>\n\t\t\t);\n\t\t}\n\t}\n}\n\nListItem.propTypes = {\n\t...TouchableHighlight.propTypes,\n\tstyle: PropTypes.object,\n\titemDivider: PropTypes.bool,\n\tbutton: PropTypes.bool,\n};\n\nconst StyledListItem = connectStyle('NativeBase.ListItem', {}, mapPropsToStyleNames)(ListItem);\n\nexport { StyledListItem as ListItem };\n"]}